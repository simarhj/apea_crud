{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/alerta/": {
            "get": {
                "tags": [
                    "alerta"
                ],
                "description": "get Alerta",
                "operationId": "AlertaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Alerta"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "alerta"
                ],
                "description": "create Alerta",
                "operationId": "AlertaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Alerta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Alerta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Alerta"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/alerta/{id}": {
            "get": {
                "tags": [
                    "alerta"
                ],
                "description": "get Alerta by id",
                "operationId": "AlertaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Alerta"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "alerta"
                ],
                "description": "update the Alerta",
                "operationId": "AlertaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Alerta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Alerta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Alerta"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "alerta"
                ],
                "description": "delete the Alerta",
                "operationId": "AlertaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/caso/": {
            "get": {
                "tags": [
                    "caso"
                ],
                "description": "get Caso",
                "operationId": "CasoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "caso"
                ],
                "description": "create Caso",
                "operationId": "CasoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Caso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Caso"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/caso/{id}": {
            "get": {
                "tags": [
                    "caso"
                ],
                "description": "get Caso by id",
                "operationId": "CasoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "caso"
                ],
                "description": "update the Caso",
                "operationId": "CasoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Caso content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "caso"
                ],
                "description": "delete the Caso",
                "operationId": "CasoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estudiante/": {
            "get": {
                "tags": [
                    "estudiante"
                ],
                "description": "get Estudiante",
                "operationId": "EstudianteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Estudiante"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "estudiante"
                ],
                "description": "create Estudiante",
                "operationId": "EstudianteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Estudiante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Estudiante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Estudiante"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estudiante/{id}": {
            "get": {
                "tags": [
                    "estudiante"
                ],
                "description": "get Estudiante by id",
                "operationId": "EstudianteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Estudiante"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estudiante"
                ],
                "description": "update the Estudiante",
                "operationId": "EstudianteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Estudiante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Estudiante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Estudiante"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estudiante"
                ],
                "description": "delete the Estudiante",
                "operationId": "EstudianteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/observacion/": {
            "get": {
                "tags": [
                    "observacion"
                ],
                "description": "get Observacion",
                "operationId": "ObservacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Observacion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "observacion"
                ],
                "description": "create Observacion",
                "operationId": "ObservacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Observacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Observacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Observacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/observacion/{id}": {
            "get": {
                "tags": [
                    "observacion"
                ],
                "description": "get Observacion by id",
                "operationId": "ObservacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Observacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "observacion"
                ],
                "description": "update the Observacion",
                "operationId": "ObservacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Observacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Observacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Observacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "observacion"
                ],
                "description": "delete the Observacion",
                "operationId": "ObservacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/opcion/": {
            "get": {
                "tags": [
                    "opcion"
                ],
                "description": "get Opcion",
                "operationId": "OpcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Opcion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "opcion"
                ],
                "description": "create Opcion",
                "operationId": "OpcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Opcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Opcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Opcion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/opcion/{id}": {
            "get": {
                "tags": [
                    "opcion"
                ],
                "description": "get Opcion by id",
                "operationId": "OpcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Opcion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "opcion"
                ],
                "description": "update the Opcion",
                "operationId": "OpcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Opcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Opcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Opcion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "opcion"
                ],
                "description": "delete the Opcion",
                "operationId": "OpcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/pregunta/": {
            "get": {
                "tags": [
                    "pregunta"
                ],
                "description": "get Pregunta",
                "operationId": "PreguntaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pregunta"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "pregunta"
                ],
                "description": "create Pregunta",
                "operationId": "PreguntaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pregunta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pregunta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Pregunta"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/pregunta/{id}": {
            "get": {
                "tags": [
                    "pregunta"
                ],
                "description": "get Pregunta by id",
                "operationId": "PreguntaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pregunta"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "pregunta"
                ],
                "description": "update the Pregunta",
                "operationId": "PreguntaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pregunta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pregunta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pregunta"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "pregunta"
                ],
                "description": "delete the Pregunta",
                "operationId": "PreguntaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/pregunta_opcion/": {
            "get": {
                "tags": [
                    "pregunta_opcion"
                ],
                "description": "get PreguntaOpcion",
                "operationId": "PreguntaOpcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PreguntaOpcion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "pregunta_opcion"
                ],
                "description": "create PreguntaOpcion",
                "operationId": "PreguntaOpcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PreguntaOpcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PreguntaOpcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PreguntaOpcion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/pregunta_opcion/{id}": {
            "get": {
                "tags": [
                    "pregunta_opcion"
                ],
                "description": "get PreguntaOpcion by id",
                "operationId": "PreguntaOpcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PreguntaOpcion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "pregunta_opcion"
                ],
                "description": "update the PreguntaOpcion",
                "operationId": "PreguntaOpcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PreguntaOpcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PreguntaOpcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PreguntaOpcion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "pregunta_opcion"
                ],
                "description": "delete the PreguntaOpcion",
                "operationId": "PreguntaOpcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/respuesta/": {
            "get": {
                "tags": [
                    "respuesta"
                ],
                "description": "get Respuesta",
                "operationId": "RespuestaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Respuesta"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "respuesta"
                ],
                "description": "create Respuesta",
                "operationId": "RespuestaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Respuesta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Respuesta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Respuesta"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/respuesta/{id}": {
            "get": {
                "tags": [
                    "respuesta"
                ],
                "description": "get Respuesta by id",
                "operationId": "RespuestaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Respuesta"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "respuesta"
                ],
                "description": "update the Respuesta",
                "operationId": "RespuestaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Respuesta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Respuesta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Respuesta"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "respuesta"
                ],
                "description": "delete the Respuesta",
                "operationId": "RespuestaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/seguimiento/": {
            "get": {
                "tags": [
                    "seguimiento"
                ],
                "description": "get Seguimiento",
                "operationId": "SeguimientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Seguimiento"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "seguimiento"
                ],
                "description": "create Seguimiento",
                "operationId": "SeguimientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Seguimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Seguimiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Seguimiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/seguimiento/{id}": {
            "get": {
                "tags": [
                    "seguimiento"
                ],
                "description": "get Seguimiento by id",
                "operationId": "SeguimientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Seguimiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "seguimiento"
                ],
                "description": "update the Seguimiento",
                "operationId": "SeguimientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Seguimiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Seguimiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Seguimiento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "seguimiento"
                ],
                "description": "delete the Seguimiento",
                "operationId": "SeguimientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Alerta": {
            "title": "Alerta",
            "type": "object",
            "properties": {
                "Fecha": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdObservacion": {
                    "$ref": "#/definitions/models.Observacion"
                },
                "Nivel": {
                    "type": "integer",
                    "format": "int32"
                },
                "Resuelta": {
                    "type": "boolean"
                },
                "Tipo": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.Caso": {
            "title": "Caso",
            "type": "object",
            "properties": {
                "CodigoFuncionario": {
                    "type": "integer",
                    "format": "int64"
                },
                "EnAtencion": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdAlerta": {
                    "$ref": "#/definitions/models.Alerta"
                },
                "ObservacionCaso": {
                    "type": "string"
                }
            }
        },
        "models.Estudiante": {
            "title": "Estudiante",
            "type": "object",
            "properties": {
                "CantidadRiesgos": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PuntajeRiesgo": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.Observacion": {
            "title": "Observacion",
            "type": "object",
            "properties": {
                "Fecha": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdSeguimiento": {
                    "$ref": "#/definitions/models.Seguimiento"
                },
                "Observacion": {
                    "type": "string"
                }
            }
        },
        "models.Opcion": {
            "title": "Opcion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdPreguntaOpcion": {
                    "$ref": "#/definitions/models.PreguntaOpcion"
                },
                "NivelRiesgo": {
                    "type": "integer",
                    "format": "int32"
                },
                "Riesgo": {
                    "type": "integer",
                    "format": "int32"
                },
                "Texto": {
                    "type": "string"
                }
            }
        },
        "models.Pregunta": {
            "title": "Pregunta",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdOpcion": {
                    "$ref": "#/definitions/models.Opcion"
                },
                "Pregunta": {
                    "type": "string"
                }
            }
        },
        "models.PreguntaOpcion": {
            "title": "PreguntaOpcion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdOpcion": {
                    "type": "integer",
                    "format": "int32"
                },
                "Pregunta": {
                    "type": "string"
                }
            }
        },
        "models.Respuesta": {
            "title": "Respuesta",
            "type": "object",
            "properties": {
                "CodigoEstudiante": {
                    "$ref": "#/definitions/models.Estudiante"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdPregunta": {
                    "$ref": "#/definitions/models.Pregunta"
                }
            }
        },
        "models.Seguimiento": {
            "title": "Seguimiento",
            "type": "object",
            "properties": {
                "Cerrado": {
                    "type": "boolean"
                },
                "CodigoEstudiante": {
                    "$ref": "#/definitions/models.Estudiante"
                },
                "CodigoFuncionario": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Motivo": {
                    "type": "integer",
                    "format": "int32"
                },
                "TipoContacto": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "observacion",
            "description": "ObservacionController operations for Observacion\n"
        },
        {
            "name": "alerta",
            "description": "AlertaController operations for Alerta\n"
        },
        {
            "name": "caso",
            "description": "CasoController operations for Caso\n"
        },
        {
            "name": "pregunta_opcion",
            "description": "PreguntaOpcionController operations for PreguntaOpcion\n"
        },
        {
            "name": "opcion",
            "description": "OpcionController operations for Opcion\n"
        },
        {
            "name": "seguimiento",
            "description": "SeguimientoController operations for Seguimiento\n"
        },
        {
            "name": "pregunta",
            "description": "PreguntaController operations for Pregunta\n"
        },
        {
            "name": "respuesta",
            "description": "RespuestaController operations for Respuesta\n"
        },
        {
            "name": "estudiante",
            "description": "EstudianteController operations for Estudiante\n"
        }
    ]
}